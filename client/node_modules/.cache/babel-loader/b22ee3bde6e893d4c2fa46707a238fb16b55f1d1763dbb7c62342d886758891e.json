{"ast":null,"code":"var _jsxFileName = \"M:\\\\Qudrat\\\\client\\\\src\\\\components\\\\Exam\\\\ExamTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Clock, AlertTriangle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamTimer = ({\n  timeLimit,\n  onTimeUp,\n  onWarning,\n  onTimeUpdate\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(timeLimit * 60); // Convert minutes to seconds\n  const [warningShown, setWarningShown] = useState(false);\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      onTimeUp();\n      return;\n    }\n\n    // Show warning when 5 minutes left\n    if (timeLeft <= 300 && !warningShown) {\n      onWarning();\n      setWarningShown(true);\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        const newTimeLeft = prev - 1;\n        // Calculate time spent and notify parent component\n        if (onTimeUpdate) {\n          const timeSpent = timeLimit * 60 - newTimeLeft;\n          onTimeUpdate(timeSpent);\n        }\n        return newTimeLeft;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft, onTimeUp, onWarning, warningShown]);\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getTimerColor = () => {\n    if (timeLeft <= 60) return 'text-red-600 bg-red-100';\n    if (timeLeft <= 300) return 'text-orange-600 bg-orange-100';\n    return 'text-blue-600 bg-blue-100';\n  };\n  const getTimerIcon = () => {\n    if (timeLeft <= 60) return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n      className: \"h-4 w-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Clock, {\n      className: \"h-4 w-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex items-center space-x-2 rtl:space-x-reverse px-3 py-2 rounded-lg ${getTimerColor()}`,\n    children: [getTimerIcon(), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-mono font-semibold\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamTimer, \"rUUbPQG6cK0H/JycYS0kFYVwj8Q=\");\n_c = ExamTimer;\nexport default ExamTimer;\nvar _c;\n$RefreshReg$(_c, \"ExamTimer\");","map":{"version":3,"names":["React","useState","useEffect","Clock","AlertTriangle","jsxDEV","_jsxDEV","ExamTimer","timeLimit","onTimeUp","onWarning","onTimeUpdate","_s","timeLeft","setTimeLeft","warningShown","setWarningShown","timer","setInterval","prev","newTimeLeft","timeSpent","clearInterval","formatTime","seconds","hours","Math","floor","minutes","secs","toString","padStart","getTimerColor","getTimerIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["M:/Qudrat/client/src/components/Exam/ExamTimer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Clock, AlertTriangle } from 'lucide-react';\r\n\r\nconst ExamTimer = ({ timeLimit, onTimeUp, onWarning, onTimeUpdate }) => {\r\n  const [timeLeft, setTimeLeft] = useState(timeLimit * 60); // Convert minutes to seconds\r\n  const [warningShown, setWarningShown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      onTimeUp();\r\n      return;\r\n    }\r\n\r\n    // Show warning when 5 minutes left\r\n    if (timeLeft <= 300 && !warningShown) {\r\n      onWarning();\r\n      setWarningShown(true);\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(prev => {\r\n        const newTimeLeft = prev - 1;\r\n        // Calculate time spent and notify parent component\r\n        if (onTimeUpdate) {\r\n          const timeSpent = (timeLimit * 60) - newTimeLeft;\r\n          onTimeUpdate(timeSpent);\r\n        }\r\n        return newTimeLeft;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, onTimeUp, onWarning, warningShown]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n\r\n    if (hours > 0) {\r\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n    }\r\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getTimerColor = () => {\r\n    if (timeLeft <= 60) return 'text-red-600 bg-red-100';\r\n    if (timeLeft <= 300) return 'text-orange-600 bg-orange-100';\r\n    return 'text-blue-600 bg-blue-100';\r\n  };\r\n\r\n  const getTimerIcon = () => {\r\n    if (timeLeft <= 60) return <AlertTriangle className=\"h-4 w-4\" />;\r\n    return <Clock className=\"h-4 w-4\" />;\r\n  };\r\n\r\n  return (\r\n    <div className={`flex items-center space-x-2 rtl:space-x-reverse px-3 py-2 rounded-lg ${getTimerColor()}`}>\r\n      {getTimerIcon()}\r\n      <span className=\"font-mono font-semibold\">\r\n        {formatTime(timeLeft)}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}