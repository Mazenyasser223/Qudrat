{"ast":null,"code":"import _objectSpread from\"M:/Qudrat/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import axios from'axios';import toast from'react-hot-toast';import ExamTimer from'../../components/Exam/ExamTimer';import QuestionCard from'../../components/Exam/QuestionCard';import ExamResults from'../../components/Exam/ExamResults';import{ArrowLeft,CheckCircle}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TakeExam=()=>{const{examId}=useParams();const navigate=useNavigate();const[exam,setExam]=useState(null);const[shuffledQuestions,setShuffledQuestions]=useState([]);const[questionOrder,setQuestionOrder]=useState([]);const[currentQuestion,setCurrentQuestion]=useState(0);const[answers,setAnswers]=useState({});const[loading,setLoading]=useState(true);const[submitting,setSubmitting]=useState(false);const[showResults,setShowResults]=useState(false);const[results,setResults]=useState(null);const[timeUp,setTimeUp]=useState(false);const[timeSpent,setTimeSpent]=useState(0);useEffect(()=>{fetchExam();},[examId]);// Function to shuffle array using Fisher-Yates algorithm\nconst shuffleArray=array=>{const shuffled=[...array];for(let i=shuffled.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[shuffled[i],shuffled[j]]=[shuffled[j],shuffled[i]];}return shuffled;};const fetchExam=async()=>{try{setLoading(true);const res=await axios.get(\"/api/exams/\".concat(examId),{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});const examData=res.data.data;setExam(examData);// Shuffle questions for this exam session\nconst shuffled=shuffleArray(examData.questions);setShuffledQuestions(shuffled);// Create question order mapping (original index -> shuffled index)\nconst order=examData.questions.map((_,originalIndex)=>{return shuffled.findIndex(q=>q===examData.questions[originalIndex]);});setQuestionOrder(order);// Initialize answers object\nconst initialAnswers={};shuffled.forEach((_,index)=>{initialAnswers[index]=null;});setAnswers(initialAnswers);}catch(error){console.error('Error fetching exam:',error);toast.error('حدث خطأ أثناء تحميل الامتحان');navigate('/student');}finally{setLoading(false);}};const handleAnswerSelect=answer=>{setAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[currentQuestion]:answer}));};const handlePrevious=()=>{if(currentQuestion>0){setCurrentQuestion(currentQuestion-1);}};const handleNext=()=>{if(currentQuestion<shuffledQuestions.length-1){setCurrentQuestion(currentQuestion+1);}};const handleSubmit=async()=>{if(window.confirm('هل أنت متأكد من تسليم الامتحان؟')){try{setSubmitting(true);// Map shuffled answers back to original question order\nconst answersArray=exam.questions.map((_,originalIndex)=>{const shuffledIndex=questionOrder[originalIndex];return{selectedAnswer:answers[shuffledIndex]||null};});const res=await axios.post(\"/api/exams/\".concat(examId,\"/submit\"),{answers:answersArray,timeSpent:timeSpent,submittedAt:new Date().toISOString()},{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});setResults(res.data.data);setShowResults(true);toast.success('تم تسليم الامتحان بنجاح');}catch(error){var _error$response,_error$response$data;console.error('Error submitting exam:',error);toast.error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'حدث خطأ أثناء تسليم الامتحان');}finally{setSubmitting(false);}}};const handleTimeUp=()=>{setTimeUp(true);toast.error('انتهى الوقت المحدد للامتحان');handleSubmit();};const handleTimeWarning=()=>{toast.error('تبقى 5 دقائق فقط على انتهاء الامتحان!');};const getAnsweredCount=()=>{return Object.values(answers).filter(answer=>answer!==null).length;};const getUnansweredQuestions=()=>{return Object.entries(answers).filter(_ref=>{let[_,answer]=_ref;return answer===null;}).map(_ref2=>{let[index,_]=_ref2;return parseInt(index)+1;});};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})});}if(!exam){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900 mb-4\",children:\"\\u0627\\u0644\\u0627\\u0645\\u062A\\u062D\\u0627\\u0646 \\u063A\\u064A\\u0631 \\u0645\\u0648\\u062C\\u0648\\u062F\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/student'),className:\"btn-primary\",children:\"\\u0627\\u0644\\u0639\\u0648\\u062F\\u0629 \\u0644\\u0644\\u0648\\u062D\\u0629 \\u0627\\u0644\\u062A\\u062D\\u0643\\u0645\"})]});}if(showResults&&results){return/*#__PURE__*/_jsx(ExamResults,{exam:exam,results:results,answers:exam.questions.map((question,originalIndex)=>{const shuffledIndex=questionOrder[originalIndex];const selectedAnswer=answers[shuffledIndex];return{selectedAnswer:selectedAnswer,isCorrect:selectedAnswer===question.correctAnswer};}),onBackToDashboard:()=>navigate('/student')});}return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-6xl mx-auto space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4 rtl:space-x-reverse\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>navigate('/student'),className:\"flex items-center space-x-2 rtl:space-x-reverse text-gray-600 hover:text-gray-800 transition-colors\",children:[/*#__PURE__*/_jsx(ArrowLeft,{className:\"h-4 w-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u0627\\u0644\\u0639\\u0648\\u062F\\u0629\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-gray-900\",children:exam.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600\",children:[\"\\u0627\\u0644\\u0645\\u062C\\u0645\\u0648\\u0639\\u0629 \",exam.examGroup,\" - \\u0627\\u0645\\u062A\\u062D\\u0627\\u0646 \",exam.order]})]})]})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-4 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lg:col-span-3\",children:[/*#__PURE__*/_jsx(QuestionCard,{question:shuffledQuestions[currentQuestion],questionNumber:currentQuestion+1,totalQuestions:shuffledQuestions.length,selectedAnswer:answers[currentQuestion],onAnswerSelect:handleAnswerSelect,onPrevious:handlePrevious,onNext:handleNext,isAnswered:answers[currentQuestion]!==null}),currentQuestion===shuffledQuestions.length-1&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 flex justify-center\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:submitting||timeUp,className:\"btn-primary flex items-center space-x-2 rtl:space-x-reverse px-8 py-3 text-lg\",children:submitting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u062C\\u0627\\u0631\\u064A \\u0627\\u0644\\u062A\\u0633\\u0644\\u064A\\u0645...\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u062A\\u0633\\u0644\\u064A\\u0645 \\u0627\\u0644\\u0627\\u0645\\u062A\\u062D\\u0627\\u0646\"})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card sticky top-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"\\u0627\\u0644\\u0623\\u0633\\u0626\\u0644\\u0629\"}),/*#__PURE__*/_jsx(ExamTimer,{timeLimit:exam.timeLimit,onTimeUp:handleTimeUp,onWarning:handleTimeWarning,onTimeUpdate:setTimeSpent})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-4 gap-2 mb-4\",children:shuffledQuestions.map((_,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentQuestion(index),className:\"w-10 h-10 rounded-lg text-sm font-medium transition-colors \".concat(currentQuestion===index?'bg-primary-600 text-white':answers[index]?'bg-green-100 text-green-700':'bg-gray-100 text-gray-600 hover:bg-gray-200'),children:index+1},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u062A\\u0645 \\u0627\\u0644\\u0625\\u062C\\u0627\\u0628\\u0629:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-green-600\",children:[getAnsweredCount(),\" / \",shuffledQuestions.length]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u063A\\u064A\\u0631 \\u0645\\u062C\\u0627\\u0628:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-red-600\",children:shuffledQuestions.length-getAnsweredCount()})]})]}),getUnansweredQuestions().length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-yellow-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-yellow-800 mb-2\",children:\"\\u0623\\u0633\\u0626\\u0644\\u0629 \\u063A\\u064A\\u0631 \\u0645\\u062C\\u0627\\u0628\\u0629:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-yellow-700\",children:getUnansweredQuestions().join(', ')})]})]})]})})]})]});};export default TakeExam;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","toast","ExamTimer","QuestionCard","ExamResults","ArrowLeft","CheckCircle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TakeExam","examId","navigate","exam","setExam","shuffledQuestions","setShuffledQuestions","questionOrder","setQuestionOrder","currentQuestion","setCurrentQuestion","answers","setAnswers","loading","setLoading","submitting","setSubmitting","showResults","setShowResults","results","setResults","timeUp","setTimeUp","timeSpent","setTimeSpent","fetchExam","shuffleArray","array","shuffled","i","length","j","Math","floor","random","res","get","concat","headers","localStorage","getItem","examData","data","questions","order","map","_","originalIndex","findIndex","q","initialAnswers","forEach","index","error","console","handleAnswerSelect","answer","prev","_objectSpread","handlePrevious","handleNext","handleSubmit","window","confirm","answersArray","shuffledIndex","selectedAnswer","post","submittedAt","Date","toISOString","success","_error$response","_error$response$data","response","message","handleTimeUp","handleTimeWarning","getAnsweredCount","Object","values","filter","getUnansweredQuestions","entries","_ref","_ref2","parseInt","className","children","onClick","question","isCorrect","correctAnswer","onBackToDashboard","title","examGroup","questionNumber","totalQuestions","onAnswerSelect","onPrevious","onNext","isAnswered","disabled","timeLimit","onTimeUp","onWarning","onTimeUpdate","join"],"sources":["M:/Qudrat/client/src/pages/Student/TakeExam.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport ExamTimer from '../../components/Exam/ExamTimer';\r\nimport QuestionCard from '../../components/Exam/QuestionCard';\r\nimport ExamResults from '../../components/Exam/ExamResults';\r\nimport { ArrowLeft, CheckCircle } from 'lucide-react';\r\n\r\nconst TakeExam = () => {\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const [exam, setExam] = useState(null);\r\n  const [shuffledQuestions, setShuffledQuestions] = useState([]);\r\n  const [questionOrder, setQuestionOrder] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [timeUp, setTimeUp] = useState(false);\r\n  const [timeSpent, setTimeSpent] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchExam();\r\n  }, [examId]);\r\n\r\n  // Function to shuffle array using Fisher-Yates algorithm\r\n  const shuffleArray = (array) => {\r\n    const shuffled = [...array];\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    }\r\n    return shuffled;\r\n  };\r\n\r\n  const fetchExam = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get(`/api/exams/${examId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      const examData = res.data.data;\r\n      setExam(examData);\r\n      \r\n      // Shuffle questions for this exam session\r\n      const shuffled = shuffleArray(examData.questions);\r\n      setShuffledQuestions(shuffled);\r\n      \r\n      // Create question order mapping (original index -> shuffled index)\r\n      const order = examData.questions.map((_, originalIndex) => {\r\n        return shuffled.findIndex(q => q === examData.questions[originalIndex]);\r\n      });\r\n      setQuestionOrder(order);\r\n      \r\n      // Initialize answers object\r\n      const initialAnswers = {};\r\n      shuffled.forEach((_, index) => {\r\n        initialAnswers[index] = null;\r\n      });\r\n      setAnswers(initialAnswers);\r\n    } catch (error) {\r\n      console.error('Error fetching exam:', error);\r\n      toast.error('حدث خطأ أثناء تحميل الامتحان');\r\n      navigate('/student');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAnswerSelect = (answer) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [currentQuestion]: answer\r\n    }));\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestion < shuffledQuestions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (window.confirm('هل أنت متأكد من تسليم الامتحان؟')) {\r\n      try {\r\n        setSubmitting(true);\r\n        \r\n        // Map shuffled answers back to original question order\r\n        const answersArray = exam.questions.map((_, originalIndex) => {\r\n          const shuffledIndex = questionOrder[originalIndex];\r\n          return {\r\n            selectedAnswer: answers[shuffledIndex] || null\r\n          };\r\n        });\r\n\r\n        const res = await axios.post(`/api/exams/${examId}/submit`, {\r\n          answers: answersArray,\r\n          timeSpent: timeSpent,\r\n          submittedAt: new Date().toISOString()\r\n        }, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n\r\n        setResults(res.data.data);\r\n        setShowResults(true);\r\n        toast.success('تم تسليم الامتحان بنجاح');\r\n      } catch (error) {\r\n        console.error('Error submitting exam:', error);\r\n        toast.error(error.response?.data?.message || 'حدث خطأ أثناء تسليم الامتحان');\r\n      } finally {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTimeUp = () => {\r\n    setTimeUp(true);\r\n    toast.error('انتهى الوقت المحدد للامتحان');\r\n    handleSubmit();\r\n  };\r\n\r\n  const handleTimeWarning = () => {\r\n    toast.error('تبقى 5 دقائق فقط على انتهاء الامتحان!');\r\n  };\r\n\r\n  const getAnsweredCount = () => {\r\n    return Object.values(answers).filter(answer => answer !== null).length;\r\n  };\r\n\r\n  const getUnansweredQuestions = () => {\r\n    return Object.entries(answers)\r\n      .filter(([_, answer]) => answer === null)\r\n      .map(([index, _]) => parseInt(index) + 1);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!exam) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">الامتحان غير موجود</h2>\r\n        <button\r\n          onClick={() => navigate('/student')}\r\n          className=\"btn-primary\"\r\n        >\r\n          العودة للوحة التحكم\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (showResults && results) {\r\n    return (\r\n      <ExamResults\r\n        exam={exam}\r\n        results={results}\r\n        answers={exam.questions.map((question, originalIndex) => {\r\n          const shuffledIndex = questionOrder[originalIndex];\r\n          const selectedAnswer = answers[shuffledIndex];\r\n          return {\r\n            selectedAnswer: selectedAnswer,\r\n            isCorrect: selectedAnswer === question.correctAnswer\r\n          };\r\n        })}\r\n        onBackToDashboard={() => navigate('/student')}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4 rtl:space-x-reverse\">\r\n              <button\r\n                onClick={() => navigate('/student')}\r\n                className=\"flex items-center space-x-2 rtl:space-x-reverse text-gray-600 hover:text-gray-800 transition-colors\"\r\n              >\r\n                <ArrowLeft className=\"h-4 w-4\" />\r\n                <span>العودة</span>\r\n              </button>\r\n              <div>\r\n                <h1 className=\"text-xl font-bold text-gray-900\">{exam.title}</h1>\r\n                <p className=\"text-gray-600\">المجموعة {exam.examGroup} - امتحان {exam.order}</p>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n        {/* Question Content */}\r\n        <div className=\"lg:col-span-3\">\r\n          <QuestionCard\r\n            question={shuffledQuestions[currentQuestion]}\r\n            questionNumber={currentQuestion + 1}\r\n            totalQuestions={shuffledQuestions.length}\r\n            selectedAnswer={answers[currentQuestion]}\r\n            onAnswerSelect={handleAnswerSelect}\r\n            onPrevious={handlePrevious}\r\n            onNext={handleNext}\r\n            isAnswered={answers[currentQuestion] !== null}\r\n          />\r\n\r\n          {/* Submit Button - Only show on last question */}\r\n          {currentQuestion === shuffledQuestions.length - 1 && (\r\n            <div className=\"mt-6 flex justify-center\">\r\n              <button\r\n                onClick={handleSubmit}\r\n                disabled={submitting || timeUp}\r\n                className=\"btn-primary flex items-center space-x-2 rtl:space-x-reverse px-8 py-3 text-lg\"\r\n              >\r\n                {submitting ? (\r\n                  <>\r\n                    <div className=\"spinner\"></div>\r\n                    <span>جاري التسليم...</span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <CheckCircle className=\"h-5 w-5\" />\r\n                    <span>تسليم الامتحان</span>\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Question Navigation - Moved to Right Side */}\r\n        <div className=\"lg:col-span-1\">\r\n          <div className=\"card sticky top-6\">\r\n            <div className=\"card-header\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">الأسئلة</h3>\r\n                {/* Timer moved here */}\r\n                <ExamTimer\r\n                  timeLimit={exam.timeLimit}\r\n                  onTimeUp={handleTimeUp}\r\n                  onWarning={handleTimeWarning}\r\n                  onTimeUpdate={setTimeSpent}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"grid grid-cols-4 gap-2 mb-4\">\r\n                {shuffledQuestions.map((_, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setCurrentQuestion(index)}\r\n                    className={`w-10 h-10 rounded-lg text-sm font-medium transition-colors ${\r\n                      currentQuestion === index\r\n                        ? 'bg-primary-600 text-white'\r\n                        : answers[index]\r\n                        ? 'bg-green-100 text-green-700'\r\n                        : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n                    }`}\r\n                  >\r\n                    {index + 1}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"space-y-2 text-sm\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-gray-600\">تم الإجابة:</span>\r\n                  <span className=\"font-medium text-green-600\">\r\n                    {getAnsweredCount()} / {shuffledQuestions.length}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-gray-600\">غير مجاب:</span>\r\n                  <span className=\"font-medium text-red-600\">\r\n                    {shuffledQuestions.length - getAnsweredCount()}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              {getUnansweredQuestions().length > 0 && (\r\n                <div className=\"mt-4 p-3 bg-yellow-50 rounded-lg\">\r\n                  <p className=\"text-sm text-yellow-800 mb-2\">أسئلة غير مجابة:</p>\r\n                  <p className=\"text-xs text-yellow-700\">\r\n                    {getUnansweredQuestions().join(', ')}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TakeExam;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}