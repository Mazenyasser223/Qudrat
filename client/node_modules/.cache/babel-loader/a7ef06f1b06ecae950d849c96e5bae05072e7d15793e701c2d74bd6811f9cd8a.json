{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{io}from'socket.io-client';import{useAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const SocketContext=/*#__PURE__*/createContext();export const useSocket=()=>{const context=useContext(SocketContext);if(!context){throw new Error('useSocket must be used within a SocketProvider');}return context;};export const SocketProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[isConnected,setIsConnected]=useState(false);const{user}=useAuth();useEffect(()=>{if(user){// Create socket connection\nconst newSocket=io(process.env.REACT_APP_API_URL||'http://localhost:5000',{transports:['websocket'],autoConnect:true});// Connection event handlers\nnewSocket.on('connect',()=>{console.log('ðŸ”Œ Connected to server');setIsConnected(true);// Join appropriate room based on user role\nif(user.role==='teacher'||user.role==='admin'){newSocket.emit('join-teacher-room',user.id);}else if(user.role==='student'){newSocket.emit('join-student-room',user.id);}});newSocket.on('disconnect',()=>{console.log('ðŸ”Œ Disconnected from server');setIsConnected(false);});newSocket.on('connect_error',error=>{console.error('ðŸ”Œ Connection error:',error);setIsConnected(false);});setSocket(newSocket);// Cleanup on unmount\nreturn()=>{newSocket.close();};}else{// Disconnect socket if user logs out\nif(socket){socket.close();setSocket(null);setIsConnected(false);}}},[user]);const value={socket,isConnected};return/*#__PURE__*/_jsx(SocketContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsx","_jsx","SocketContext","useSocket","context","Error","SocketProvider","_ref","children","socket","setSocket","isConnected","setIsConnected","user","newSocket","process","env","REACT_APP_API_URL","transports","autoConnect","on","console","log","role","emit","id","error","close","value","Provider"],"sources":["M:/Qudrat/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      // Create socket connection\r\n      const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:5000', {\r\n        transports: ['websocket'],\r\n        autoConnect: true\r\n      });\r\n\r\n      // Connection event handlers\r\n      newSocket.on('connect', () => {\r\n        console.log('ðŸ”Œ Connected to server');\r\n        setIsConnected(true);\r\n        \r\n        // Join appropriate room based on user role\r\n        if (user.role === 'teacher' || user.role === 'admin') {\r\n          newSocket.emit('join-teacher-room', user.id);\r\n        } else if (user.role === 'student') {\r\n          newSocket.emit('join-student-room', user.id);\r\n        }\r\n      });\r\n\r\n      newSocket.on('disconnect', () => {\r\n        console.log('ðŸ”Œ Disconnected from server');\r\n        setIsConnected(false);\r\n      });\r\n\r\n      newSocket.on('connect_error', (error) => {\r\n        console.error('ðŸ”Œ Connection error:', error);\r\n        setIsConnected(false);\r\n      });\r\n\r\n      setSocket(newSocket);\r\n\r\n      // Cleanup on unmount\r\n      return () => {\r\n        newSocket.close();\r\n      };\r\n    } else {\r\n      // Disconnect socket if user logs out\r\n      if (socket) {\r\n        socket.close();\r\n        setSocket(null);\r\n        setIsConnected(false);\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  const value = {\r\n    socket,\r\n    isConnected\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,OAASC,EAAE,KAAQ,kBAAkB,CACrC,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,aAAa,cAAGR,aAAa,CAAC,CAAC,CAErC,MAAO,MAAM,CAAAS,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,OAAO,CAAGT,UAAU,CAACO,aAAa,CAAC,CACzC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,gDAAgD,CAAC,CACnE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAEgB,IAAK,CAAC,CAAGd,OAAO,CAAC,CAAC,CAE1BH,SAAS,CAAC,IAAM,CACd,GAAIiB,IAAI,CAAE,CACR;AACA,KAAM,CAAAC,SAAS,CAAGhB,EAAE,CAACiB,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAAE,CAC7EC,UAAU,CAAE,CAAC,WAAW,CAAC,CACzBC,WAAW,CAAE,IACf,CAAC,CAAC,CAEF;AACAL,SAAS,CAACM,EAAE,CAAC,SAAS,CAAE,IAAM,CAC5BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACrCV,cAAc,CAAC,IAAI,CAAC,CAEpB;AACA,GAAIC,IAAI,CAACU,IAAI,GAAK,SAAS,EAAIV,IAAI,CAACU,IAAI,GAAK,OAAO,CAAE,CACpDT,SAAS,CAACU,IAAI,CAAC,mBAAmB,CAAEX,IAAI,CAACY,EAAE,CAAC,CAC9C,CAAC,IAAM,IAAIZ,IAAI,CAACU,IAAI,GAAK,SAAS,CAAE,CAClCT,SAAS,CAACU,IAAI,CAAC,mBAAmB,CAAEX,IAAI,CAACY,EAAE,CAAC,CAC9C,CACF,CAAC,CAAC,CAEFX,SAAS,CAACM,EAAE,CAAC,YAAY,CAAE,IAAM,CAC/BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC1CV,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAAC,CAEFE,SAAS,CAACM,EAAE,CAAC,eAAe,CAAGM,KAAK,EAAK,CACvCL,OAAO,CAACK,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5Cd,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAAC,CAEFF,SAAS,CAACI,SAAS,CAAC,CAEpB;AACA,MAAO,IAAM,CACXA,SAAS,CAACa,KAAK,CAAC,CAAC,CACnB,CAAC,CACH,CAAC,IAAM,CACL;AACA,GAAIlB,MAAM,CAAE,CACVA,MAAM,CAACkB,KAAK,CAAC,CAAC,CACdjB,SAAS,CAAC,IAAI,CAAC,CACfE,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CACF,CAAC,CAAE,CAACC,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAe,KAAK,CAAG,CACZnB,MAAM,CACNE,WACF,CAAC,CAED,mBACEV,IAAA,CAACC,aAAa,CAAC2B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAApB,QAAA,CAClCA,QAAQ,CACa,CAAC,CAE7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}